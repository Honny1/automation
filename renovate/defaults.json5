/*

Validate this file before commiting with (from repository root):

    podman run -it \
        -v ./renovate/defaults.json5:/usr/src/app/renovate.json5:z \
        docker.io/renovate/renovate:latest \
        renovate-config-validator

*/

{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",

  "description": "This is a basic preset intended\
  for reuse to reduce the amount of boiler-plate\
  configuration that otherwise would need to be\
  duplicated. It should be referenced from other\
  repositories renovate config under the 'extends'\
  section as:\
  github>containers/automation//renovate/defaults.json5\
  (optionally with a '#X.Y.Z' version-tag suffix).",

  /*************************************************
   ****** Global/general configuration options *****
   *************************************************/

  // Re-use predefined sets of configuration options to DRY
  "extends": [
    // https://docs.renovatebot.com/presets-config/#configbase
    "config:base",

    // https://docs.renovatebot.com/presets-default/#preservesemverranges
    ":preserveSemverRanges",

    // https://docs.renovatebot.com/presets-default/#gitsignoff
    ":gitSignOff",

    // Always rebase dep. update PRs from `main` when PR is stale
    ":rebaseStalePrs",
  ],

  // The default setting is ambiguous, explicitly base schedules on UTC
  "timezone": "UTC",

  // Don't swamp CI, rate-limit opening of PRs w/in schedule limits.
  "prHourlyLimit": 1,

  // Make renovate PRs stand out from the crowd
  "labels": ["dependencies"],

  // Default setting is an "empty" schedule.  Explicitly set this
  // such that security-alert PRs may be opened immediately.
  "vulnerabilityAlerts": {
    "labels": ["dependencies", "security"],
  },

  // On a busy repo, automatic-rebasing will swamp the CI system.
  // Turn it off here, then allow individual repos. to override/enable
  // it as appropriate.
  "rebaseWhen": "never",

  /*************************************************
   ***** Golang-specific configuration options *****
   *************************************************/

  "golang": {
    // disabled by default, safe to enable since "tidy" enforced by CI.
    "postUpdateOptions": ["gomodTidy"],

    // In case a version in use is retracted, allow going backwards.
    // N/B: This is NOT compatible with pseudo versions, see below.
    "rollbackPrs": false,
  },

  // N/B: LAST MATCHING RULE WINS, match statems are ANDed together.
  // https://docs.renovatebot.com/configuration-options/#packagerules
  "packageRules": [
    // Golang pseudo-version packages will spam with every Commit ID change.
    // Limit update frequency.
    {
      "matchLanguages": ["go"],
      "matchUpdateTypes": ["digest"],
      "schedule": "after 1am and before 11am on the first day of the month",
    },

    // Workaround: rollbackPRs are not compatible with digest updates.
    // This is a catch-the-rest rule which must appear AFTER the go
    // "digest" rule (above).
    // Ref: https://github.com/renovatebot/renovate/discussions/18250
    {
      "matchLanguages": ["go"],
      // Open rollback PR if updated dep. is removed (i.e. tag pulled
      // due to major bug or security issue).
      "rollbackPrs": true,
    },

    // Github-action updates cannot consistently be tested in a PR.
    // This is caused by an unfixable architecture-flaw: Execution
    // context always depends on trigger, and we (obvious) can't know
    // that ahead of time for all workflows.  Abandon all hope and
    // mark github-action dep. update PRs '[skip-ci]'
    {
      "matchManagers": ["github-actions"],
      "matchDepTypes": ["action"],
      "commitMessagePrefix": "[skip-ci]"
    }
  ],
}
